{"version":3,"sources":["logo.svg","Utils/roomGenerator.js","actions/choiceReducer.js","Components/Rooms/Rooms.js","store.js","Components/SelectPanel/SelectPanel.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","roomGenerate","rows","places","res","i","j","ids","push","id","row","place","flag","Math","random","setPlaces","arr","type","setPrice","num","prevAnswerFromServer","data","1","name","space","Rooms","state","room","price","generateHall","line","_this","forEach","elem","ind","mouseHandler","event","checkId","target","style","background","mouseOutHandler","props","some","el","clickHanler","console","log","newMass","Object","toConsumableArray","check","indexOf","splice","this","setState","_this2","react_default","a","createElement","className","map","key","index","inStock","title","concat","color","onMouseOver","onMouseOut","onClick","Component","connect","actions","reducers","combineReducers","action","undefined","store","createStore","SelectPanel","clickDelHandler","newArr","allDel","display","length","reduce","prev","subscribe","getState","App","es","Components_Rooms_Rooms","Components_SelectPanel_SelectPanel","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,6UCqBzBC,EAnBI,SAACC,EAAMC,GAKtB,IAJA,IAAIC,EAAM,GACNC,EAAI,EACJC,EAAI,EACJC,EAAM,EACJF,GAAKH,GAAK,CACZ,KAAMI,GAAKH,GACPC,EAAII,KAAK,CACLC,GAAIF,IACJG,IAAKL,EACLM,MAAOL,IACPM,KAAMC,KAAKC,SAAW,KAG9BR,EAAI,EACJD,IAEJ,OAAOD,kBCnBEW,EAAY,SAAAC,GAAG,MAAK,CAAEC,KAAM,aAAcD,IAAKA,IAC/CE,EAAW,SAAAC,GAAG,MAAK,CAAEF,KAAM,YAAaE,IAAKA,ICKtDC,EAGI,IAIJC,EAAO,CACTC,EAAG,CACDC,KAAM,QACNC,MAAOvB,EAAa,EAAE,MAMpBwB,6MACJC,MAAQ,CACNC,KAAM,KACNC,MAAO,KAETC,aAAe,WACb,IAAIzB,EAAM,GACN0B,EAAO,GAWX,OAVAC,EAAKL,MAAMC,KAAKH,MAAMQ,QAAQ,SAACC,EAAMC,EAAKlB,GACnCiB,EAAKvB,OAASM,EAAIkB,EAAI,GAAKlB,EAAIkB,EAAI,GAAGxB,IAAM,MAC/CoB,EAAKtB,KAAKyB,IAGVH,EAAKtB,KAAKyB,GACV7B,EAAII,KAAKsB,GACTA,EAAO,MAGJ1B,KAET+B,aAAe,SAAAF,GAAI,OAAI,SAAAG,GACfH,EAAKrB,MAASmB,EAAKM,QAAQJ,EAAKxB,MAAM2B,EAAME,OAAOC,MAAMC,WAAa,cAG9EC,gBAAkB,SAAAR,GAAI,OAAI,SAAAG,GAClBH,EAAKrB,MAASmB,EAAKM,QAAQJ,EAAKxB,MAAM2B,EAAME,OAAOC,MAAMC,WAAa,YAG9EH,QAAU,SAAA5B,GAAE,OAAIsB,EAAKW,MAAMvC,OAAOwC,KAAM,SAAAC,GAAE,OAAIA,EAAGnC,KAAOA,OAExDoC,YAAc,SAAAZ,GAAI,OAAI,SAAAG,GAEpB,GADAU,QAAQC,IAAId,IACPA,EAAKrB,KAAV,CACA,IAAIoC,EAAOC,OAAAC,EAAA,EAAAD,CAAOlB,EAAKW,MAAMvC,QACzBgD,EAAQH,EAAQI,QAASnB,GAC7BkB,GAAS,EAAIH,EAAQK,OAAQF,EAAO,GAAMH,EAAQxC,KAAKyB,GACvDF,EAAKW,MAAM3B,UAAUiC,GACrBF,QAAQC,IAAI,QAAShB,EAAKW,MAAMvC,8FAKhCmD,KAAKC,SAAS,CAAE5B,KAAMN,EAAK,GAAIO,MAAOR,IACtCkC,KAAKZ,MAAMxB,SAAUE,oCAGf,IAAAoC,EAAAF,KACN,OAAMA,KAAK5B,MAAMC,KAEf8B,EAAAC,EAAAC,cAAA,OAAKC,UAAY,QACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAY,eAAeN,KAAK5B,MAAMC,KAAKJ,MAC/CkC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,cACdN,KAAKzB,eAAegC,IAAI,SAAC/B,EAAMI,GAAP,OACvBuB,EAAAC,EAAAC,cAAA,OAAKC,UAAW,mBAAmBE,IAAO5B,GACvCJ,EAAK+B,IAAI,SAAC5B,EAAK8B,GACd,IAAIC,EAAUR,EAAKnB,QAAQJ,EAAKxB,IAEhC,OADAqC,QAAQC,IAAIiB,EAAQ/B,EAAKxB,IAEzBgD,EAAAC,EAAAC,cAAA,OAAKC,UAAY,yBACZE,IAAOC,EAAQ7B,EACf+B,MAAK,uBAAAC,OAAYjC,EAAKvB,IAAjB,sCAAAwD,OAAgCjC,EAAKtB,MAArC,gCAAAuD,OAAqDV,EAAK9B,MAAME,OACrEW,MAAS,CAACC,WAAYwB,EAAU,SAAW/B,EAAKrB,KAAO,OAAS,OACvDuD,MAAOlC,EAAKrB,KAAO,OAAS,QACrCwD,YAAeZ,EAAKrB,aAAaF,GACjCoC,WAAcb,EAAKf,gBAAgBR,GACnCqC,QAAWd,EAAKX,YAAYZ,IAC3BA,EAAKtB,cAnBS8C,EAAAC,EAAAC,cAAA,OAAKC,UAAY,QAAjB,qBA/ChBW,aA8EL9C,EADfA,EAAQ+C,YA/Ec,SAAA9C,GAAK,MAAK,CAACvB,OAAQuB,EAAMvB,OAAOA,SA+EnBsE,EAA3BD,CAAqC/C,UCxFvCiD,EAAWC,YAAgB,CAC/BxE,OAVgB,SAACuB,EAAOkD,GACxB,YAAeC,IAAVnD,EACI,CAAEvB,OAAQ,GAAIyB,MAAO,GACT,eAAhBgD,EAAO3D,KACH,CAAEd,OAAQyE,EAAO5D,IAAKY,MAAOF,EAAME,OACvB,cAAhBgD,EAAO3D,KACH,CAAEd,OAAQuB,EAAMvB,OAAQyB,MAAOgD,EAAOzD,KACxCO,KAQMoD,EAFDC,YAAYL,GCLpBM,oNAEJC,gBAAkB,SAAAhD,GAAI,OAAI,SAAAG,GACxB,IAAI8C,EAAMjC,OAAAC,EAAA,EAAAD,CAAOlB,EAAKW,MAAMvC,QAC5B+E,EAAO7B,OAAO6B,EAAO9B,QAAQnB,GAAM,GACnCF,EAAKW,MAAM3B,UAAUmE,OAGvBC,OAAS,SAAA/C,GACPL,EAAKW,MAAM3B,UAAU,6EAGf,IAAAyC,EAAAF,KACFtD,EAAIsD,KAAKZ,MACb,OACEe,EAAAC,EAAAC,cAAA,OAAKC,UAAY,SACfH,EAAAC,EAAAC,cAAA,mGACAF,EAAAC,EAAAC,cAAA,KAAGpB,MAAS,CAAE6C,QAASpF,EAAEG,OAAOkF,OAAS,OAAS,UAAlD,oWAGA5B,EAAAC,EAAAC,cAAA,OAAKC,UAAY,kBACfrB,MAAS,CAAE6C,QAAUpF,EAAEG,OAAOkF,OAAkB,QAAT,SACrC5B,EAAAC,EAAAC,cAAA,OAAKC,UAAY,yBACfH,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,8CACAF,EAAAC,EAAAC,cAAA,yCAED3D,EAAEG,OAAO0D,IAAK,SAAC5B,EAAKC,GAAN,OACbuB,EAAAC,EAAAC,cAAA,OAAKC,UAAY,yBACfH,EAAAC,EAAAC,cAAA,YAAO1B,EAAKvB,KACZ+C,EAAAC,EAAAC,cAAA,YAAO1B,EAAKtB,OACZ8C,EAAAC,EAAAC,cAAA,YAAO3D,EAAE4B,MAAT,sBACE6B,EAAAC,EAAAC,cAAA,QAAMC,UAAY,6BAChBU,QAAWd,EAAKyB,gBAAgBhD,IADlC,SAKNwB,EAAAC,EAAAC,cAAA,OAAKC,UAAY,uBACfrB,MAAS,CAAE6C,QAASpF,EAAEG,OAAOkF,QAAS,EAAI,OAAS,UACnD5B,EAAAC,EAAAC,cAAA,6EACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAY,6BAChBU,QAAWhB,KAAK6B,QADlB,MAGF1B,EAAAC,EAAAC,cAAA,OAAKC,UAAY,wBACfH,EAAAC,EAAAC,cAAA,+CACAF,EAAAC,EAAAC,cAAA,YACG3D,EAAEG,OAAOmF,OAAO,SAACC,EAAKtD,GAAN,OACfsD,EAAQvF,EAAE4B,OACV,cAhDQ2C,cAyDVS,EADfA,EAAcR,YA7DO,SAAA9C,GAAK,MAAK,CAC9BvB,OAAQuB,EAAMvB,OAAOA,OACrByB,MAAOF,EAAMvB,OAAOyB,QA2DoB6C,EAA3BD,CAAqCQ,GC1DpDF,EAAMU,UAAU,kBAAI1C,QAAQC,IAAI+B,EAAMW,kBAevBC,mLAXX,OACEjC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAUb,MAASA,GACjBrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACiC,EAAD,MACAnC,EAAAC,EAAAC,cAACkC,EAAD,eANQtB,aCEEuB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO3C,EAAAC,EAAAC,cAAC0C,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.430a554d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\n\r\nlet roomGenerate = (rows, places) => {\r\n    let res = []\r\n    let i = 1\r\n    let j = 1\r\n    let ids = 1\r\n    while(i <= rows){\r\n        while(j <= places ){\r\n            res.push({\r\n                id: ids++,\r\n                row: i,\r\n                place: j++,\r\n                flag: Math.random() < 0.2\r\n            })\r\n        }\r\n        j = 1\r\n        i++\r\n    }\r\n    return res\r\n}\r\nexport default roomGenerate\r\n","export const setPlaces = arr => ({ type: 'SET_PLACES', arr: arr })\r\nexport const setPrice = num => ({ type: 'SET_PRICE', num: num })\r\n","import React, { Component } from 'react';\r\nimport roomGenerate from '../../Utils/roomGenerator.js';\r\nimport './index.css';\r\nimport {connect}   from 'react-redux';\r\nimport * as actions from '../../actions/choiceReducer.js';\r\n\r\nlet prevAnswerFromServer = {\r\n  data: '15.03.19',\r\n  time: '19:00',\r\n\tprice: 100,\r\n\troom : 1,\r\n\tfilm : 777,\r\n\t\t\t}\r\nlet data = {\r\n  1: {\r\n    name: 'green',\r\n    space: roomGenerate(7,14)\r\n  }\r\n}\r\n\r\nlet mapStateToProps = state => ({places: state.places.places})\r\n\r\nclass Rooms extends Component {\r\n  state = {\r\n    room: null,\r\n    price: 0,\r\n  }\r\n  generateHall = () => {\r\n    let res = []\r\n    let line = []\r\n    this.state.room.space.forEach((elem, ind, arr) =>{\r\n      if ( elem.row === (arr[ind+1] ? arr[ind+1].row : null) ) {\r\n        line.push(elem)\r\n      }\r\n      else {\r\n        line.push(elem)\r\n        res.push(line)\r\n        line = []\r\n      }\r\n    })\r\n    return res\r\n  }\r\n  mouseHandler = elem => event => {\r\n    if ( !elem.flag && !this.checkId(elem.id) ) event.target.style.background = 'orange'\r\n  }\r\n\r\n  mouseOutHandler = elem => event => {\r\n    if ( !elem.flag && !this.checkId(elem.id) ) event.target.style.background = 'blue'\r\n  }\r\n\r\n  checkId = id => this.props.places.some( el => el.id === id )\r\n\r\n  clickHanler = elem => event => {\r\n    console.log(elem)\r\n    if ( elem.flag ) return\r\n    let newMass = [...this.props.places]\r\n    let check = newMass.indexOf( elem )\r\n    check > -1 ? newMass.splice( check, 1 ) : newMass.push(elem)\r\n    this.props.setPlaces(newMass)\r\n    console.log('cilck', this.props.places)\r\n  }\r\n\r\n\r\n  componentDidMount(){\r\n    this.setState({ room: data[1], price: prevAnswerFromServer.price })\r\n    this.props.setPrice( prevAnswerFromServer.price )\r\n  }\r\n\r\n  render(){\r\n    if ( !this.state.room )return ( <div className = 'room'>Loading...</div> )\r\n    return (\r\n      <div className = 'room'>\r\n        <h1 className = 'room__title'>{this.state.room.name}</h1>\r\n        <div className = 'room__hall'>\r\n          {this.generateHall().map((line, ind) =>(\r\n            <div className ='room__hall__line' key = {ind}>\r\n              {line.map((elem,index) =>{\r\n                let inStock = this.checkId(elem.id)\r\n                console.log(inStock,elem.id)\r\n                return(\r\n                <div className = 'room__hall__line__cell'\r\n                     key = {index + ind}\r\n                     title = {`ряд: ${elem.row}; место: ${elem.place}; цена: ${this.state.price}`}\r\n                     style = {{background: inStock ? 'orange' : elem.flag ? 'gray' : 'blue',\r\n                              color: elem.flag ? 'gray' : 'blue'}}\r\n                     onMouseOver = {this.mouseHandler(elem)}\r\n                     onMouseOut = {this.mouseOutHandler(elem)}\r\n                     onClick = {this.clickHanler(elem)}>\r\n                     {elem.place}\r\n                  </div>\r\n              )})}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nRooms = connect ( mapStateToProps, actions )(Rooms)\r\nexport default Rooms\r\n","import {createStore, combineReducers} from 'redux';\r\n\r\nlet choicePlace = (state, action) => {\r\n  if ( state === undefined )\r\n    return { places: [], price: 0 }\r\n  if ( action.type === 'SET_PLACES' )\r\n    return { places: action.arr, price: state.price }\r\n  if ( action.type === 'SET_PRICE')\r\n    return { places: state.places, price: action.num }\r\n  return state\r\n}\r\nconst reducers = combineReducers({\r\n  places: choicePlace\r\n})\r\n\r\nconst store = createStore(reducers)\r\n\r\nexport default store \r\n","import React, { Component } from 'react';\r\nimport {connect}   from 'react-redux';\r\nimport * as actions from '../../actions/choiceReducer.js';\r\nimport './index.css';\r\n\r\nlet mapStateToProps = state => ({\r\n  places: state.places.places,\r\n  price: state.places.price\r\n})\r\n\r\nclass SelectPanel extends Component {\r\n\r\n  clickDelHandler = elem => event => {\r\n    let newArr = [...this.props.places]\r\n    newArr.splice(newArr.indexOf(elem),1)\r\n    this.props.setPlaces(newArr)\r\n  }\r\n\r\n  allDel = event => {\r\n    this.props.setPlaces([])\r\n  }\r\n\r\n  render(){\r\n    let p = this.props\r\n    return(\r\n      <div className = 'panel'>\r\n        <h2>Выбранные места</h2>\r\n        <p style = {{ display: p.places.length ? 'none' : 'block' }}>\r\n          Для продолжения необходимо выбрать хотя бы одно место на схеме зала\r\n        </p>\r\n        <div className = 'panel__item-bar'\r\n          style = {{ display: !p.places.length ? 'none' : 'block' }}>\r\n            <div className = 'panel__item-bar__line'>\r\n              <span>Ряд</span>\r\n              <span>Место</span>\r\n              <span>Цена</span>\r\n            </div>\r\n            {p.places.map( (elem,ind ) =>(\r\n              <div className = 'panel__item-bar__line'>\r\n                <span>{elem.row}</span>\r\n                <span>{elem.place}</span>\r\n                <span>{p.price} грн\r\n                  <span className = 'panel__item-bar__line__del'\r\n                    onClick = {this.clickDelHandler(elem)}>x</span>\r\n                </span>\r\n              </div>\r\n            ))}\r\n            <div className = 'panel__item-bar__sum'\r\n              style = {{ display: p.places.length <=1 ? 'none' : 'block' }}>\r\n              <span>Удалить все</span>\r\n              <span className = 'panel__item-bar__line__del'\r\n                onClick = {this.allDel}>x</span>\r\n            </div>\r\n            <div className = 'panel__item-bar__sum'>\r\n              <span>Всего:</span>\r\n              <span>\r\n                {p.places.reduce((prev,elem) => (\r\n                  prev += p.price\r\n                ),0)}\r\n              </span>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n SelectPanel = connect ( mapStateToProps, actions)( SelectPanel )\r\n export default SelectPanel\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Rooms from './Components/Rooms/Rooms.js'\nimport {Provider}   from 'react-redux';\nimport store from './store.js';\nimport SelectPanel from './Components/SelectPanel/SelectPanel.js'\n\nstore.subscribe(()=>console.log(store.getState()));\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store = {store}>\n        <div className=\"App\">\n          <Rooms />\n          <SelectPanel />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}